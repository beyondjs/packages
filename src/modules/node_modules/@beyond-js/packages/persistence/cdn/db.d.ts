/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/firestore-collection/collection';
import * as __beyond_dep_ns_1 from '@beyond-js/packages/persistence/interfaces';
// accounts.ts
declare namespace ns_0 {
  import Collection = __beyond_dep_ns_0.Collection;
  import SubCollection = __beyond_dep_ns_0.SubCollection;
  import IAccountData = __beyond_dep_ns_1.IAccountData;
  import IProjectData = __beyond_dep_ns_1.IProjectData;
  class Accounts extends Collection<IAccountData> {
    #private;
    get projects(): SubCollection<IProjectData>;
    constructor();
  }
  export const accounts: Accounts;
  export {};
}


// collection.ts
declare namespace ns_1 {
  import ICollection = __beyond_dep_ns_1.ICollection;
  export class Collection<DATA> implements ICollection<DATA> {
    #private;
    constructor(name: string);
    get(params: {
      id: string;
    }): Promise<DATA | void>;
    set(params: {
      id: string;
      data: DATA;
    }): Promise<void>;
    delete(params: {
      id: string;
    }): Promise<void>;
  }
}


// packages.ts
declare namespace ns_2 {
  import Collection = ns_1.Collection;
  import IPackageData = __beyond_dep_ns_1.IPackageData;
  export const packages: Collection<IPackageData>;
}


// projects.ts
declare namespace ns_3 {
  import Collection = __beyond_dep_ns_0.Collection;
  import IProjectData = __beyond_dep_ns_1.IProjectData;
  export const projects: Collection<IProjectData>;
}


export import accounts = ns_0.accounts;
export import Collection = ns_1.Collection;
export import packages = ns_2.packages;
export import projects = ns_3.projects;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };